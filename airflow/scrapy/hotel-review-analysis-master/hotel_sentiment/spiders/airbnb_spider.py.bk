import scrapy
#from hotel_sentiment.items import HotelSentimentItem
# utilizo la clase del review en vez de la del hotel
from hotel_sentiment.items import AirbnbReviewItem

#TODO use loaders
class AirbnbSpider(scrapy.Spider):
    name = "airbnb"
    start_urls = [
        "https://www.airbnb.co.uk/s/Costa-Adeje--Spain?guests=1&adults=1&children=0&infants=0&place_id=ChIJyzjzHlqXagwRn04E1XuMjLo&ss_id=j9nj12n1&source=bb&page=1&s_tag=3T_5kbg1&allow_override%5B%5D="
    ]

    def parse(self, response):
        print("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")        
        #//*[contains(concat( " ", @class, " " ), concat( " ", "container_1n4kkam", " " ))]
        lista_enlaces = response.xpath('//div[@class="infoContainer_1lypmfk"]/a/@href')
        print("lista enlaces = ",lista_enlaces)
        for href in lista_enlaces:
            url = response.urljoin(href.extract())
            yield scrapy.Request(url, callback=self.parse_hotel)

        next_page = response.xpath('//li[@class="next next_page"]/a/@href')
        if next_page:
            url = response.urljoin(next_page[0].extract())
            yield scrapy.Request(url, self.parse)

  
    #get its reviews page
    def parse_hotel(self, response):
        print("YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY") 
        print(response)
        reviewsurl = response.xpath('//div[@class="row-review"]')
        print("Reviewsurl = ",reviewsurl)
        
        for rev in response.xpath('//div[@class="expandable-content")]/p'):
            item = AirbnbReviewItem() #cambio de la clase Hotel Sentiment a la especifica de Tripadvisor
            item['content'] = response.xpath('//p[@class="selectorgadget_selected"]/text()').extract()[0]     
            item['review_date'] = response.xpath('//span[@class="date"]/@content').extract()
            return item
        
        #url = response.urljoin(reviewsurl[0].extract())
        #return scrapy.Request(url, callback=self.parse_reviews)
        #return scrapy.Request(reviewsurl, callback=self.parse_reviews)
        next_page = response.xpath('//li[@class="next next_page"]/a/@href')
        if next_page:
            url = response.urljoin(next_page[0].extract())
            yield scrapy.Request(url, self.parse_hotel)


    #to get the full review content I open its page, because I dont get the full content on the main page
    #theres probably a better way to do it, requires investigation
    def parse_reviews(self, response):
        print("ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ")
        for rev in response.xpath('//div[@class="review_item")]'):
            item = AirbnbReviewItem() #cambio de la clase Hotel Sentiment a la especifica de Tripadvisor
            item['content'] = response.xpath('//p[@class="selectorgadget_selected"]/text()').extract()[0]     
            item['review_date'] = response.xpath('//span[@class="date"]/@content').extract()
            return item

